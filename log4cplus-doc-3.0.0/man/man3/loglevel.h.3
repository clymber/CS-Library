.TH "loglevel.h" 3 "Fri Sep 20 2024" "Version 3.0.0" "log4cplus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
loglevel.h \- This header defines the LogLevel type\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <log4cplus/config\&.hxx>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <shared_mutex>\fP
.br
\fC#include <log4cplus/tstring\&.h>\fP
.br
\fC#include <log4cplus/helpers/pointer\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBlog4cplus::LogLevelTranslator\fP"
.br
.RI "This is a base class used by \fC\fBLogLevelManager\fP\fP to translate between numeric \fCLogLevel\fP and log level name\&. "
.ti -1c
.RI "class \fBlog4cplus::LogLevelManager\fP"
.br
.RI "This class is used to 'manage' LogLevel definitions\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBlog4cplus\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int \fBlog4cplus::LogLevel\fP"
.br
.RI "Defines the minimum set of priorities recognized by the system, that is \fC\fBFATAL_LOG_LEVEL\fP\fP, \fC\fBERROR_LOG_LEVEL\fP\fP, \fC\fBWARN_LOG_LEVEL\fP\fP, \fC\fBINFO_LOG_LEVEL\fP\fP, \fC\fBDEBUG_LOG_LEVEL\fP\fP, and \fC\fBTRACE_LOG_LEVEL\fP\fP\&. "
.ti -1c
.RI "using \fBlog4cplus::SharedLogLevelTranslatorPtr\fP = helpers::SharedObjectPtr< LogLevelTranslator >"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLOG4CPLUS_EXPORT\fP LogLevelManager & \fBlog4cplus::getLogLevelManager\fP ()"
.br
.RI "Returns the singleton \fBLogLevelManager\fP\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const LogLevel \fBlog4cplus::OFF_LOG_LEVEL\fP = 60000"
.br
.RI "The \fCOFF_LOG_LEVEL\fP LogLevel is used during configuration to turn off logging\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::FATAL_LOG_LEVEL\fP = 50000"
.br
.RI "The \fCFATAL_LOG_LEVEL\fP LogLevel designates very severe error events that will presumably lead the application to abort\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::ERROR_LOG_LEVEL\fP = 40000"
.br
.RI "The \fCERROR_LOG_LEVEL\fP LogLevel designates error events that might still allow the application to continue running\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::WARN_LOG_LEVEL\fP = 30000"
.br
.RI "The \fCWARN_LOG_LEVEL\fP LogLevel designates potentially harmful situations\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::INFO_LOG_LEVEL\fP = 20000"
.br
.RI "The \fCINFO_LOG_LEVEL\fP LogLevel designates informational messages that highlight the progress of the application at coarse-grained level\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::DEBUG_LOG_LEVEL\fP = 10000"
.br
.RI "The \fCDEBUG_LOG_LEVEL\fP LogLevel designates fine-grained informational events that are most useful to debug an application\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::TRACE_LOG_LEVEL\fP = 0"
.br
.RI "The \fCTRACE_LOG_LEVEL\fP LogLevel is used to 'trace' entry and exiting of methods\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::ALL_LOG_LEVEL\fP = TRACE_LOG_LEVEL"
.br
.RI "The \fCALL_LOG_LEVEL\fP LogLevel is used during configuration to turn on all logging\&. "
.ti -1c
.RI "const LogLevel \fBlog4cplus::NOT_SET_LOG_LEVEL\fP = \-1"
.br
.RI "The \fCNOT_SET_LOG_LEVEL\fP LogLevel is used to indicated that no particular LogLevel is desired and that the default should be used\&. "
.in -1c
.SH "Detailed Description"
.PP 
This header defines the LogLevel type\&. 


.PP
Definition in file \fBloglevel\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for log4cplus from the source code\&.
