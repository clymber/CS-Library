.TH "config.hxx" 3 "Fri Sep 20 2024" "Version 2.1.0" "log4cplus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
config.hxx
.SH SYNOPSIS
.br
.PP
\fC#include <log4cplus/config/win32\&.h>\fP
.br
\fC#include <log4cplus/helpers/thread\-config\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLOG4CPLUS_POOR_MANS_CHCONV\fP"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_DECLSPEC_EXPORT\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_DECLSPEC_IMPORT\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_DECLSPEC_PRIVATE\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_PRIVATE\fP   \fBLOG4CPLUS_DECLSPEC_PRIVATE\fP"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_INLINE_EXPORT\fP"
.br
.ti -1c
.RI "#define \fB__has_feature\fP(X)   0"
.br
.RI "\fB__has_feature(X)\fP is Clangs way for testing features\&. "
.ti -1c
.RI "#define \fBLOG4CPLUS_NOEXCEPT\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_NOEXCEPT_FALSE\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_FORMAT_ATTRIBUTE\fP(archetype,  fmt_index,  first_arg_index)       /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_CALLER_FILE\fP()   (nullptr)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_CALLER_LINE\fP()   (\-1)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_CALLER_FUNCTION\fP()   (nullptr)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_ATTRIBUTE_NORETURN\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_ATTRIBUTE_PURE\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_ATTRIBUTE_DEPRECATED\fP   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_BUILTIN_EXPECT\fP(exp,  c)   (exp)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_LIKELY\fP(cond)   \fBLOG4CPLUS_BUILTIN_EXPECT\fP(!! (cond), 1)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_UNLIKELY\fP(cond)   \fBLOG4CPLUS_BUILTIN_EXPECT\fP(!! (cond), 0)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_CONSTRUCTOR_FUNC\fP(prio)   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_INIT_PRIORITY\fP(prio)   /* empty */"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_INIT_PRIORITY_BASE\fP   (65535 / 2)"
.br
.ti -1c
.RI "#define \fBLOG4CPLUS_THREADED\fP(x)   x"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define __has_feature(X)   0"

.PP
\fB__has_feature(X)\fP is Clangs way for testing features\&. Define it to 0 if it does not exist\&. 
.PP
Definition at line \fB90\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_ATTRIBUTE_DEPRECATED   /* empty */"

.PP
Definition at line \fB136\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_ATTRIBUTE_NORETURN   /* empty */"

.PP
Definition at line \fB133\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_ATTRIBUTE_PURE   /* empty */"

.PP
Definition at line \fB135\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_BUILTIN_EXPECT(exp, c)   (exp)"

.PP
Definition at line \fB137\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_CALLER_FILE()   (nullptr)"

.PP
Definition at line \fB121\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_CALLER_FUNCTION()   (nullptr)"

.PP
Definition at line \fB123\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_CALLER_LINE()   (\-1)"

.PP
Definition at line \fB122\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_CONSTRUCTOR_FUNC(prio)   /* empty */"

.PP
Definition at line \fB161\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_DECLSPEC_EXPORT   /* empty */"

.PP
Definition at line \fB42\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_DECLSPEC_IMPORT   /* empty */"

.PP
Definition at line \fB46\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_DECLSPEC_PRIVATE   /* empty */"

.PP
Definition at line \fB50\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_FORMAT_ATTRIBUTE(archetype, fmt_index, first_arg_index)       /* empty */"

.PP
Definition at line \fB109\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_INIT_PRIORITY(prio)   /* empty */"

.PP
Definition at line \fB168\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_INIT_PRIORITY_BASE   (65535 / 2)"

.PP
Definition at line \fB171\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_INLINE_EXPORT"

.PP
Definition at line \fB72\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_LIKELY(cond)   \fBLOG4CPLUS_BUILTIN_EXPECT\fP(!! (cond), 1)"

.PP
Definition at line \fB140\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_NOEXCEPT   /* empty */"

.PP
Definition at line \fB101\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_NOEXCEPT_FALSE   /* empty */"

.PP
Definition at line \fB102\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_POOR_MANS_CHCONV"

.PP
Definition at line \fB38\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_PRIVATE   \fBLOG4CPLUS_DECLSPEC_PRIVATE\fP"

.PP
Definition at line \fB53\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_THREADED(x)   x"

.PP
Definition at line \fB178\fP of file \fBconfig\&.hxx\fP\&.
.SS "#define LOG4CPLUS_UNLIKELY(cond)   \fBLOG4CPLUS_BUILTIN_EXPECT\fP(!! (cond), 0)"

.PP
Definition at line \fB141\fP of file \fBconfig\&.hxx\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for log4cplus from the source code\&.
