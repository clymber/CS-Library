.TH "log4cplus::spi::FactoryRegistry< T >" 3 "Fri Sep 20 2024" "Version 2.1.0" "log4cplus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4cplus::spi::FactoryRegistry< T > \- This template class is used as a 'Factory Registry'\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <factory\&.h>\fP
.PP
Inherits \fBlog4cplus::spi::ObjectRegistryBase\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T \fBproduct_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~FactoryRegistry\fP ()"
.br
.ti -1c
.RI "bool \fBput\fP (std::unique_ptr< T > object)"
.br
.RI "Used to enter an object into the registry\&. "
.ti -1c
.RI "T * \fBget\fP (const \fBlog4cplus::tstring\fP &name) const"
.br
.RI "Used to retrieve an object from the registry\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBdeleteObject\fP (void *object) const"
.br
.RI "Deletes \fCobject\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class log4cplus::spi::FactoryRegistry< T >"This template class is used as a 'Factory Registry'\&. 

Objects are 'entered' into the registry with a 'name' using the \fC\fBput()\fP\fP method\&. (The registry then owns the object\&.) These object can then be retrieved using the \fC\fBget()\fP\fP method\&.
.PP
\fBNote:\fP This class is Thread-safe\&. 
.PP
Definition at line \fB149\fP of file \fBfactory\&.h\fP\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<class T > typedef T \fBlog4cplus::spi::FactoryRegistry\fP< T >::product_type"

.PP
Definition at line \fB153\fP of file \fBfactory\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > virtual \fBlog4cplus::spi::FactoryRegistry\fP< T >::~\fBFactoryRegistry\fP ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB155\fP of file \fBfactory\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<class T > virtual void \fBlog4cplus::spi::FactoryRegistry\fP< T >::deleteObject (void * object) const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Deletes \fCobject\fP\&. 
.PP
Implements \fBlog4cplus::spi::ObjectRegistryBase\fP\&.
.PP
Definition at line \fB179\fP of file \fBfactory\&.h\fP\&.
.SS "template<class T > T * \fBlog4cplus::spi::FactoryRegistry\fP< T >::get (const \fBlog4cplus::tstring\fP & name) const\fC [inline]\fP"

.PP
Used to retrieve an object from the registry\&. (The registry owns the returned pointer\&.) 
.PP
Definition at line \fB174\fP of file \fBfactory\&.h\fP\&.
.SS "template<class T > bool \fBlog4cplus::spi::FactoryRegistry\fP< T >::put (std::unique_ptr< T > object)\fC [inline]\fP"

.PP
Used to enter an object into the registry\&. (The registry now owns \fCobject\fP\&.) 
.PP
Definition at line \fB164\fP of file \fBfactory\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for log4cplus from the source code\&.
